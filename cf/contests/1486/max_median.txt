We can binary search on the median, because for an interval, we can check if the median if valid if:
 - The amount of numbers >= x is more than numbers < x.
 - Note that the definition of median in this problem is different.

We can use prefix sums to quickly calculate for any interval f(x) and g(x).
 - f(x) is the amount of numbers >= x
 - g(x) is the amount of numbers < x

Then, a number x works if for some interval (i,j] >= length k, f(interval)-g(interval) > 0.
We can expand this to f(j)-f(i) - (g(j)-g(i)) > 0.
-> f(j)-g(j) > f(i)-g(i).
-> Denoting h(i) as f(i)-g(i), we now have the inequality h(j)-h(i) > 0.
We can fix i, and then we want to find the maximum j such that the resulting subarray length is >= k.
To find the maximum, use prefix sums.
If we find a working value, then the median x works; otherwise it does not.